@using Atheer.Services.UsersService
@model Atheer.Services.ArticlesService.ArticlesResponse

@{
    ViewData["Title"] = "Articles";
    
    bool authenticated = User.Identity?.IsAuthenticated == true;

    string oldestOrLatestArticlesString = Model.OldestArticles ? "Oldest" : "Latest";
    bool sortableByOldestNewest = !Model.Search && !Model.SpecificYear && string.IsNullOrEmpty(Model.TagId);
    bool sortStringCheckboxValue = !Model.OldestArticles;
}

@if (User.IsInRole(UserRoles.EditorRole))
{
    @section Button1
    {
        <a class="nav-link text-dark" asp-controller="ArticleEdit" asp-action="AddArticleView">Write Article</a>
    }
}

<h5 class="text-dark">
    @if (!string.IsNullOrEmpty(Model.TagTitle))
    {
        @Html.Raw("Tag: ")
        @Model.TagTitle
        @if (User.IsInRole(UserRoles.AdminRole))
        {
            <a class="text-info" asp-controller="Tag" asp-action="UpdateTagView" asp-route-tagId="@Model.TagId">Edit</a>
        }
        <br/>
    }
    @if (Model.SpecificYear)
    {
        @Model.Year.ToString()
        @Html.Raw(" Articles")
    }
    @if (Model.Search)
    {
        @Html.Raw($"Searched for: {Model.SearchQuery}")
    }
    else if (sortableByOldestNewest)
    {
        <form method="get" asp-controller="Articles" asp-action="Index" asp-route-oldest="@sortStringCheckboxValue.ToString()" id="sortForm">
            <span class="form-check form-switch">
                <input class="form-check-input" type="checkbox" name="Oldest" id="Oldest" value="@sortStringCheckboxValue.ToString()" />
                <label class="form-check-label" for="Oldest">@oldestOrLatestArticlesString Articles</label>
            </span>
        </form>
    }
</h5>

@if (string.IsNullOrEmpty(Model.TagId) && !Model.Search)
{
    <h5 class="text-dark">Tags: </h5>
    <ul class="list-group list-group-horizontal flex-fill">
    @foreach (var tag in Model.MostPopularTags)
    {
        <li class="list-group-item">
            <a asp-controller="Articles" asp-action="Index" asp-route-tag="@tag.Id">@tag.Title (@tag.Count.ToString())</a>
        </li>
    }
    </ul>
}
else
{
    <ul class="list-group list-group-horizontal flex-fill">
        <li class="list-group-item">
            <a href="/">All tags</a>
        </li>
    </ul>
}

<div class="mt-3"></div>

@await Component.InvokeAsync("Articles", Model).ConfigureAwait(false)

@section Scripts
{
    @if (sortableByOldestNewest)
    {
        <script>
        document.getElementById("Oldest").addEventListener("change", () => document.getElementById("sortForm").submit());
        </script>
    }
}