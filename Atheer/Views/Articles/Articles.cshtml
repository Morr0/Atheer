@using Atheer.Services.UsersService
@using Atheer.Controllers.Authentication
@using Atheer.Extensions
@model Atheer.Services.ArticlesService.ArticlesResponse

@{
    ViewData["Title"] = "Articles";
    
    string oldestOrLatestArticlesString = Model.OldestArticles ? "Oldest" : "Latest";
    bool sortableByOldestNewest = !Model.Search;
    bool sortStringCheckboxValue = !Model.OldestArticles;
    
    string userId = User.FindFirst(AuthenticationController.CookieUserId)?.Value;

    int prevPage = Model.CurrentPage - 1;
    int nextPage = Model.CurrentPage + 1;

    bool viewUser = !string.IsNullOrEmpty(Model.UserId) && !string.IsNullOrEmpty(Model.UserName);
    bool viewTag = !string.IsNullOrEmpty(Model.TagTitle) && !Model.Search;
    bool viewTags = !viewUser && !Model.Search;
}

@if (User.IsInRole(UserRoles.EditorRole))
{
    @section Button1
    {
        <a class="nav-link text-dark" asp-controller="ArticleEdit" asp-action="AddArticleView">Write Article</a>
    }
}

<h5 class="text-dark">
    @if (viewUser)
    {
        <span>By 
            <a class="card-link" asp-controller="User" asp-action="UserView" asp-route-userId="@Model.UserId">
                @Model.UserName
            </a>
        </span>
    }
    @if (viewTag)
    {
        @Html.Raw("Tag: ")
        @Model.TagTitle
        @if (User.IsInRole(UserRoles.AdminRole))
        {
            <a class="text-info" asp-controller="Tag" asp-action="UpdateTagView" asp-route-tagId="@Model.TagId">
                Edit
            </a>
        }
        <br/>
    }
    @if (Model.SpecificYear)
    {
        @Model.Year.ToString()
        @Html.Raw(" Articles")
    }
    else if (Model.Search)
    {
        @Html.Raw($"Searched for: {Model.SearchQuery}")
    }
    @if (sortableByOldestNewest)
    {
        <form method="get" asp-controller="Articles" asp-action="Index" asp-route-oldest="@sortStringCheckboxValue.ToString()"
              asp-route-page="0" id="sortForm">
            <input type="hidden" asp-for="UserId" />
            <input type="hidden" asp-for="Year" />
            <input type="hidden" name="Tag" value="@Model.TagId" />
            
            <input type="hidden" asp-for="UserId" />
            <span class="form-check form-switch">
                <input class="form-check-input" type="checkbox" name="Oldest" id="Oldest" value="@sortStringCheckboxValue.ToString()"/>
                <label class="form-check-label" for="Oldest">@oldestOrLatestArticlesString Articles</label>
            </span>
        </form>
    }
</h5>

@if (viewTags && string.IsNullOrEmpty(Model.TagTitle))
{
    <h5 class="text-dark">Tags: </h5>
    <ul class="list-group list-group-horizontal flex-fill">
    @foreach (var tag in Model.MostPopularTags)
    {
        <li class="list-group-item">
            <a asp-controller="Articles" asp-action="Index" asp-route-tag="@tag.Id" asp-route-page="0">
                @tag.Title (@tag.Count.ToString())
            </a>
        </li>
    }
    </ul>
}
else
{
    <ul class="list-group list-group-horizontal flex-fill">
        <li class="list-group-item">
            <a href="/">All tags</a>
        </li>
    </ul>
}

<div class="mt-3"></div>

@if (!Model.Articles.Any())
{
    <span class="text-info">No articles exist...</span>
}

@foreach (var article in Model.Articles)
{
    <div class="card">
        <div class="card-body">
            <div class="card-title">
                <h5>
                    <a class="text-dark" asp-controller="Article" asp-action="Index"
                       asp-route-CreatedYear="@article.CreatedYear.ToString()" asp-route-TitleShrinked="@article.TitleShrinked">
                        @article.Title
                    </a>
                    
                    @if (userId == article.AuthorId || User.IsInRole(UserRoles.AdminRole))
                    {
                        <a asp-controller="ArticleEdit" asp-action="UpdateArticleView" asp-route-CreatedYear="@article.CreatedYear.ToString()"
                           asp-route-TitleShrinked="@article.TitleShrinked">Edit</a>
                    }
                </h5>

                @if (article.AuthorId == userId)
                {
                    <span class="text-info">Mine</span>
                }

                @if (article.Draft)
                {
                    <span class="text-info">Draft</span>
                }
                @if (article.Unlisted)
                {
                    <span class="text-info">Unlisted</span>
                }
                
                @if ((userId == article.AuthorId || User.IsInRole(UserRoles.AdminRole)) && article.ForceFullyUnlisted)
                {
                    <span class="text-danger">Unlisted by Admin</span>
                }

            </div>
            <h6 class="card-subtitle">@await Component.InvokeAsync("LocalDate", article.CreatedAt.GetString())</h6>
            <p class="card-text">@article.Description</p>
        </div>
    </div>
}

@* Pagination *@
@if (Model.AnyNext || Model.AnyPrevious)
{
    <ul class="pagination justify-content-center mt-4">
        @if (Model.AnyPrevious)
        {
            <li class="page-item"><a class="page-link" asp-controller="Articles" asp-action="Index" asp-route-Tag="@Model.TagId"
                                     asp-route-UserId="@Model.UserId" asp-route-page="@prevPage.ToString()">
                Previous
            </a></li>
        }
        else
        {
            <li class="page-item disabled"><a class="page-link" tabindex="-1" asp-route-UserId="@Model.UserId">Previous</a></li>
        }
        @if (Model.AnyNext)
        {
            <li class="page-item"><a class="page-link" asp-controller="Articles" asp-action="Index" asp-route-Tag="@Model.TagId"
                                     asp-route-UserId="@Model.UserId" asp-route-page="@nextPage.ToString()">
                Next
            </a></li>
        }
        else
        {
            <li class="page-item disabled"><a class="page-link" tabindex="-1" asp-route-UserId="@Model.UserId">Next</a></li>
        }
    </ul>
}

@section Scripts
{
    @if (sortableByOldestNewest)
    {
        <script>
        document.getElementById("Oldest").addEventListener("change", () => document.getElementById("sortForm").submit());
        </script>
    }
}