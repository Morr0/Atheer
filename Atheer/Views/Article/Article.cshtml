@using Markdig
@using Atheer.Controllers.Authentication
@using Atheer.Extensions
@using Atheer.Services.ArticlesService.Models
@using Atheer.Services.UsersService
@inject MarkdownPipeline MarkdownPipeline
@model Atheer.Controllers.Article.Models.ArticleViewModel
@{
    var article = Model.Article;
    ViewData["Title"] = article.Title;
    string content = article.Content is null ? "" : Markdown.ToHtml(article.Content, MarkdownPipeline);

    string tags = string.Join(", ", Model.Tags);
    
    string viewerUserId = User.FindFirst(AuthenticationController.CookieUserId)?.Value;
    bool canEdit = viewerUserId == Model.Article.AuthorId || User.IsInRole(UserRoles.AdminRole);

    bool narrated = Model.Article.Narratable && !string.IsNullOrEmpty(Model.Article.NarrationMp3Url);
    
    bool isPartOfSeries = Model.SeriesArticles?.SeriesId is not null;
    int? seriesPosInList = Model.SeriesArticles?.Articles?.FindIndex(x => x.CreatedYear == Model.Article.CreatedYear 
                                                                         && x.TitleShrinked == Model.Article.TitleShrinked);
    LightArticleView prevArticleInSeries = null, nextArticleInSeries = null;
    if ((seriesPosInList + 1) < Model.SeriesArticles?.Articles?.Count)
    {
        nextArticleInSeries = Model.SeriesArticles.Articles[seriesPosInList.Value + 1];
    }
    if (isPartOfSeries && seriesPosInList > 0)
    {
        prevArticleInSeries = Model.SeriesArticles.Articles[seriesPosInList.Value - 1];
    }
}

@section Head
{
    <style type="text/css">
        .go-up-btn {
            position: fixed;
            bottom: 50px;
            right: 50px;
            width: 4rem;
            height: 4rem;
            overflow: hidden;
            z-index: 999;
        }
    </style>
}

<div class="container">
    <div class="card-header">
        <h6 class="card-subtitle">@tags</h6>
        
        <h2 class="text-dark">@article.Title</h2>
        @if (canEdit)
        {
            <span class="text-info">Mine</span>
            <a asp-controller="ArticleEdit" asp-action="UpdateArticleView" asp-route-CreatedYear="@Model.Article.CreatedYear.ToString()" 
               asp-route-TitleShrinked="@Model.Article.TitleShrinked">Edit</a>
        }
        <span class="card-subtitle">
            By <a asp-controller="User" asp-action="UserView" asp-route-userId="@Model.Article.AuthorId" class="card-link">
                @Model.AuthorFullName
            </a>
        </span>

        @if (article.Draft)
        {
            <span class="text-info">Draft</span>
        }
        @if (article.Unlisted)
        {
            <span class="text-info">Unlisted</span>
        }
        @if ((viewerUserId == article.AuthorId || User.IsInRole(UserRoles.AdminRole)) && article.ForceFullyUnlisted)
        {
            <span class="text-danger">Unlisted by Admin</span>
        }

        <p class="card-text">@article.Description</p>
        
        @if (narrated)
        {
            <a href="@Model.Article.NarrationMp3Url" target="_blank" class="link-info">Click here to listen to article</a>
        }
        
        <h6 class="card-subtitle">@await Component.InvokeAsync("LocalDate", article.CreatedAt.GetString()).CAF()</h6>
        
        <div class="text-info" id="wpm" title="According to the average words per minute read of 240 words"></div>
    </div>
    <div class="card-body">
        @if (isPartOfSeries)
        {
            <div>
                <h5 class="text-dark">Series: @Model.SeriesArticles.SeriesTitle</h5>
                <ul class="list-group">
                    @foreach (var seriesArticle in Model.SeriesArticles.Articles)
                    {
                        <li class="list-group-item">
                            @if (Model.Article.CreatedYear == seriesArticle.CreatedYear && 
                                 Model.Article.TitleShrinked == seriesArticle.TitleShrinked)
                            {
                                @seriesArticle.Title
                            }
                            else
                            {
                                <a asp-controller="Article" asp-action="Index"
                                   asp-route-CreatedYear="@seriesArticle.CreatedYear.ToString()" asp-route-TitleShrinked="@seriesArticle.TitleShrinked">
                                    @seriesArticle.Title
                                </a>
                            }
                        </li>
                    }
                </ul>
            </div>
            <br>
            }
        <div class="text-dark" hidden id="tocOuter">
            <h3>Table of Contents</h3>
            <div id="toc"></div>
            <br>
        </div>
        <div class="h-di"></div>
        <span id="articleContent">@Html.Raw(content)</span>
        <div class="h-di"></div>
        @if (isPartOfSeries)
        {
            <div class="row">
                <div class="col-6 text-start">
                    @if (prevArticleInSeries is not null)
                    {
                        <b class="text-dark">Previous: </b>
                        <a class="link-dark text-decoration-underline" asp-controller="Article" asp-action="Index" 
                           asp-route-CreatedYear="@prevArticleInSeries.CreatedYear.ToString()" asp-route-TitleShrinked="@prevArticleInSeries.TitleShrinked">
                            @prevArticleInSeries.Title
                        </a>
                    }
                </div>
                <div class="col-6 text-end">
                    @if (nextArticleInSeries is not null)
                    {
                        <b class="text-dark">Next: </b>
                        <a class="link-dark text-decoration-underline" asp-controller="Article" asp-action="Index"
                           asp-route-CreatedYear="@nextArticleInSeries.CreatedYear.ToString()" asp-route-TitleShrinked="@nextArticleInSeries.TitleShrinked">
                            @nextArticleInSeries.Title
                        </a>
                    }
                </div>
            </div>
        }
    </div>
    <div class="card-footer">
        @if (article.Likeable)
        {
            <label id="likes" for="like">@article.Likes.ToString() Likes | </label>
            <button type="button" class="btn btn-outline-secondary" id="like" value="Like"
                    onclick="like(@article.CreatedYear.ToString(), '@article.TitleShrinked')">Like</button>
        }
        @if (article.Shareable)
        {
            <button type="button" class="btn btn-outline-secondary" id="share" value="Share"
                    onclick="share(@article.CreatedYear.ToString(), '@article.TitleShrinked')">Share</button>
        }
        <span class="text-info" id="shareInfo"></span>
    </div>
</div>

<button type="button" class="btn btn-info rounded-circle go-up-btn" hidden id="go-up-btn">Up</button>

@section Scripts
{
    <script>
const halfHeight = window.innerHeight / 5;
const goUpBtn = document.getElementById("go-up-btn");
window.addEventListener("scroll", (event) => {
    goUpBtn.hidden = window.scrollY <= halfHeight;
});

window.scrollBy({
   behavior: "smooth",
   top: 0,
   left: 250
});

goUpBtn.addEventListener("click", () => {
    window.scrollTo({
        top: 0,
        left: window.screenX,
        behavior: "smooth"
    });
});

const jumpableHeaders = document.querySelectorAll(".jumpableHeader");
if (jumpableHeaders.length > 0){
    let string = [`<ul class="list-group flex-grow-0">`];
    for (let header of jumpableHeaders) {
        const name = header.innerText.replace(":", "");
        string.push(`<li class="list-group-item"><a href="#${header.id}">${name}</a></li>`);
    }
    string.push("</ul>");
    
    const tableOfContentsDiv = document.getElementById("toc").innerHTML = string.join("");
    document.getElementById("tocOuter").hidden = false;
}

(() => {
    const content = document.getElementById("articleContent").textContent;
    
    const wordsCount = content.replace(/[^w ]/, "").split(/\s+/).length;
    const minsToRead = Math.floor(wordsCount / 240) + 1;
    document.getElementById("wpm").innerHTML = `${minsToRead} minutes to read`;
})();
</script>
}
