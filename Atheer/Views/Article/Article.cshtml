@using Markdig
@using Atheer.ViewComponents
@using Atheer.Controllers
@inject MarkdownPipeline MarkdownPipeline
@model Article
@{
    ViewData["Title"] = Model.Title;
    string content = Markdown.ToHtml(Model.Content, MarkdownPipeline);

    var topics = String.Join(',', Model.Topics);
    
    string dateStr = Model.CreationDate.Split('T')[0];

    string userId = User.FindFirst(AuthenticationController.CookieUserId)?.Value;
}

<div class="container">
    <div class="card-header">
        <h2 class="text-dark">@Model.Title</h2>
        
        @if (Model.AuthorId == userId)
        {
            <span class="text-info">Mine</span>
        }
        
        @if (Model.Draft)
        {
            <span class="text-info">Draft</span>
        }
        @if (Model.Unlisted)
        {
            <span class="text-info">Unlisted</span>
        }
        
        @await Component.InvokeAsync("ArticleEditLink",
            new ArticleEditLinkModel(Model, @User.FindFirst(AuthenticationController.CookieUserId)?.Value))
        <h6 class="card-subtitle">@dateStr Topics: @topics</h6>
        <p class="card-text">@Model.Description</p>
    </div>
    <div class="card-body">
        <div class="h-di"></div>
        @Html.Raw(content)
    </div>
    <div class="card-footer">
        @if (Model.Likeable)
        {
            <label id="likes" for="like">@Model.Likes.ToString() Likes | </label>
            <button type="button" class="btn btn-outline-secondary" id="like" value="Like"
                    onclick="like(@Model.CreatedYear.ToString(), '@Model.TitleShrinked')">Like</button>
        }
        @if (Model.Shareable)
        {
            <button type="button" class="btn btn-outline-secondary" id="share" value="Share"
                    onclick="share(@Model.CreatedYear.ToString(), '@Model.TitleShrinked')">Share</button>
        }
        <span class="text-info" id="shareInfo"></span>
    </div>
</div>