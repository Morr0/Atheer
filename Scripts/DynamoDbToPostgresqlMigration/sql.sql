"INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Description\",\"Likeable\",\"Shareable\",\"AuthorId\",\"CreatedYear\",\"Likes\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('18/01/2021 7:14:50 AM','Extending a type is an important thing and is often done. The reason maybe repeating code multiple times and you want to have it generalized into a method that belongs to a type. Or, a programmer from another programming language may need to add a method to a specific class to ease in the programming in C# and be programming like that other language.\r\n\r\n### Extension methods:\r\nMore often that not you end up wanting to extend a code you have no control over, maybe from another library. This is also a good practice to separate concerns of code. You may be doing repetitive work on an object in which you dreamt that the object had the functionality you wanted already.\r\n\r\n[Extension methods](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods) come to the rescue. In fact, the popular .NET [Linq](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/) uses extension methods to do their work.\r\n\r\nLet's start:\r\n```c#\r\npublic class Testo\r\n{\r\n\tprotected int x;\r\n\r\n\tprivate void DoSomething()\r\n\t{\r\n\t\tx += 10;\r\n\t}\r\n}\r\n```\r\n\r\nHere there is a class I cannot add something to. Now I create an extension method in another class called `TestoExtensions`:\r\n```c#\r\npublic static class TestoExtensions\r\n{\r\n\tpublic static void Do(this Testo testo)\r\n\t{\r\n\t\t// Do something\r\n\t}\r\n}\r\n```\r\n\r\nHere is a static class with a static method that has a rather interesting syntax `this` in the parameter declaration. The `this` must be the first argument. This `Do` method takes no argument even though there is one in the signature. Now this is an extension method. You can call it as you were calling a normal method.\r\n\r\nNote that the class holding the extension method must be marked static because of single responsibility principle as well as because the compiler is doing somethings behind the scenes to make this work.\r\n\r\nExtension methods can have overloads.\r\n\r\nNote that even though you can extend a class, operator overloading extension methods are not currently possible.\r\n\r\n### Extension method on generic classes:\r\nIt is possible to add extension methods to generic classes having one more generic types. Let's make the `Testo` class above take `T`:\r\n```c#\r\npublic class Testo<T>\r\n```\r\n\r\nNow we need to change the signature of the extension method to accomodate the changes in the target class.\r\n```c#\r\npublic static void Do<T>(this Testo<T> testo)\r\n{\r\n\t// Do something object\r\n}\r\n```\r\n\r\nNote that the extension method will also need to be generic. This method will apply to all instances of the class of any generic type.\r\n\r\nHere is something you will like a lot. You can have special extension methods on specific types. Like so:\r\n```c#\r\npublic static void DoInt(this Testo<int> testo)\r\n{\r\n\t// Do something int\r\n}\r\n\r\npublic static void DoString(this Testo<string> testo)\r\n{\r\n\t// Do something string\r\n}\r\n```\r\n\r\nHere those 2 methods are only existent on their respective types. Note that I did not make the method take a generic type parameter as I don't need to. The first `DoInt` can only be called on `Testo<int>` and the same is true for any other type.\r\n\r\nYou can also make the actual extension methods generic, taking a generic that has nothing to do with the class like so:\r\n```c#\r\npublic static IDictionary<T, X> ToDictionary<T, X>(this Testo<T> testo)\r\n{\r\n\t// Do something\r\n\treturn null;\r\n}\r\n```\r\n\r\nHere there is a method that takes in 2 generic type parameters which is fine. However calling the above method has a caveat where you have to put the generic type parameter in, the one used by `Testo<T>` like so:\r\n```c#\r\nvar tString = new Testo<string>();\r\ntString.ToDictionary<string, int>();\r\n```\r\n\r\nThe same can be done on interfaces.\r\n\r\n### Extending object:\r\nYou can extend object as you can for any class. Here I will make a utility method for me just as an application of this article:\r\n```c#\r\npublic static string Info(this object obj)\r\n{\r\n\tif (obj == null) throw new ArgumentNullException();\r\n\r\n\tvar type = obj.GetType();\r\n\treturn $\"Name: {type.Name}, Abstract: {type.IsAbstract}, Generic: {type.IsGenericType}\";\r\n} \r\n```\r\n\r\nNote the check for null, here is an **important** thing to know. **Extension methods can be called on null references**. It is your job as a developer to check for null.\r\n\r\n### Limiations of extension methods:\r\nExtensions methods are defined in classes and so in order to use them, you must be using the namespace the extension methods are in.\r\n\r\nAnother thing, if a class/interface has a method named the same name as an extension method and both are in the same context. The extension method will have lower priority. In other words, the extension is not even recognised by the compiler.\r\n\r\nNow I tested the latter limiation to see if a more specialized generic extension method has priority over extension methods defined by the original type. The result is extension methods have lower priority under all circumstances.\r\n\r\nAnother limitation is the fact that extension methods cannot access internal members of a type directly, you will need to use reflection to do that.\r\n\r\n### Using reflection on extension methods:\r\nNow what the compiler does with extension methods? Each extension method will get the `ExtensionAttribute` from the `System.Runtime.CompilerServices` namespace. So if you are looking for extension methods, look for this attribute.\r\n\r\n### How are extension methods used:\r\nThe Linq library of the .NET standard here utilizes extension methods heavilly. You can view the source code here: https://github.com/dotnet/runtime/tree/master/src/libraries/System.Linq\r\n\r\n### Why not partial classes?\r\nYes you can use partial classes to do somethings you can do with extension methods. In fact this is recommended when you have access to edit the source code. Partial classes allow for a class to be extended over many files then later linked by compiler. However you cannot link partial classes over different assemblies. Partial classess will allow access for private/protected members which is not a luxury of extension methods.\r\n\r\n### Conclusion:\r\nExtension methods are very useful. However before using them ask the following question, do you really need to use them? Can you get away with other language features. It is not like that they are any bad.','More often that not you end up wanting to extend a code you have no control over, maybe from another library. Extension methods can have that made possible.','true','true','ramihhikmat','2021','0','C# Extension methods','18/01/2021 7:15:21 AM','0','c#-extension-methods');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Description\",\"Likeable\",\"Shareable\",\"CreatedYear\",\"Likes\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('12/01/2021 5:34:24 AM','Since I am currently applying for software engineering jobs and keeping track of where I applied and what customized resume I used for the company as well as the application. A lot of repeatable mouse clicking is going on from making the folder to copying the resume (CV) and cover letter into that folder. That folder that is created must be put on a folder named the same name as the current month of the year. This takes time that maybe better else where utilized. Hence I decided to make a tool that will free me of a lot of repeatable mouse clicking. Still will need to do some mouse clicking but way less now.\r\n\r\nMy plan is just to create a folder that has a `-` in the name on the root directory and then gets slotted into the equivalent month and gets `Resume.docx` and `Cover Letter.docx` automatically copied into as well as creating a `link.txt`. That will allow me to customize the resume and cover letter used in the job application's folder. \r\n\r\nAs a tool this is not a hard task in fact a quick [Node.js](https://nodejs.org/en/) script. I thought of making it completely automated whereby I only enter to a user interface the relevant things but that would take days to go through and finish and test. This article will asumme you know [Javascript](https://www.javascript.com/)/Node.js.\r\n\r\nThe complete tool is found on my Github: [https://github.com/Morr0/JobOrganiser](https://github.com/Morr0/JobOrganiser)\r\n\r\n### Experimenting by listing all directories\r\n```javascript\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms)); \r\n\r\n(async () => {\r\n    while (true){\r\n        await sleep(1000);\r\n        \r\n        const dirs = fs.readdirSync(\".\");\r\n        dirs.forEach(item => console.log(item));\r\n    }\r\n})();\r\n```\r\n\r\nNow here there is a while loop that sleeps for 1000 ms or 1 second and lists all directories in the current directory denoted by the linux `.` which means the current directory. The sleep function is basically calling `setTimeout` which is a Node.js way of waiting. The `fs` file system module is used to abstract OS file system operations.\r\n\r\n### Adding the necessary constants:\r\n\r\n```javascript\r\nconst separator = '-';\r\nconst resumeName = \"Resume.docx\";\r\nconst coverLetterName = \"Cover Letter.docx\";\r\nconst linkFile = \"link.txt\";\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n```\r\n\r\nNow the `separator` is my predicate, i.e. if a directory has it then that directory is one am looking for. The 3 constants below are just the names of files involved that I described above in the scenario. The next thing is an array of month names in English. Since Node.js doesn't have an API that tells me a month name except has `new Date().getMonth()` which is [0-11] describing month numbers.\r\n\r\n### Adding the logic necessary:\r\nNow will change the body of the while loop to have the following:\r\n```javascript\r\nawait sleep(1000);\r\n\r\nconst dirs = fs.readdirSync(\".\");\r\nfor (const i in dirs){\r\n    const dir = dirs[i];\r\n    if (dir.includes(separator)){\r\n        console.log(dir);\r\n\r\n        await putInRespectiveFolder(dir);\r\n        fs.rmdirSync(dir);\r\n    }\r\n}\r\n```\r\n\r\nNote that this `for` loop looks like a `foreach` loop in other [C-Family programming languages](https://en.wikipedia.org/wiki/List_of_C-family_programming_languages) except here the `i` constant is just an index that we use it to refer to the array `dirs` which are the directories. Then we use a string function to check if the directory name has a `-` in it. Note that am awaiting the `putInRespectiveFolder` function which I will define below. \r\n\r\n```javascript\r\nconst putInRespectiveFolder = async (dir) => {\r\n    const month = months[new Date().getMonth()];\r\n    const dirLocation = path.join(month, dir);\r\n\r\n    if (!fs.existsSync(path.join(month))){\r\n        fs.mkdirSync(month);\r\n    }\r\n    fs.mkdirSync(dirLocation, {recursive: true});\r\n\r\n    fs.copyFileSync(resumeName, path.join(dirLocation, resumeName));\r\n    fs.copyFileSync(coverLetterName, path.join(dirLocation, coverLetterName));\r\n\r\n    fs.writeFileSync(path.join(dirLocation, linkFile), \"\");\r\n};\r\n```\r\n\r\nFirst thing here is getting the month name, then using `path` which is the `require('path')` module I included above to construct a path. Then checking if a directory exists with the month name. If not then create one.\r\n\r\nThen will create a directory inside the month directory to house the job application. Note the use of `recursive: true` as an options parameter, this will not try to create the month directory everytime, i.e. it will check for it first. Setting it to false will cause an error each time and may cause unexpected behaviour if any of the directories existed.\r\n\r\nThen just copying the required files and then making a new `link.txt` file as empty which then I will write to it the URL of the job application.\r\n\r\n### Notes:\r\nNow that the application is done, running it:\r\n```bash\r\nnode app.js\r\n```\r\n\r\nNow by just moving the `app.js` file to wherever you want to use it and run it.\r\n\r\nI will make some notes:\r\n- I have hardcoded the file names I am using because their names won't change\r\n- Note I could've used asynchrnonous version of the I/O operations but didn't as I need to promisify them all which will take some more lines of code\r\n- Even though I didn't use asynchronous versions of the `fs`, I have made the functions async for the reason to minimise processing and nothing else\r\n- The `path` module abstracts OS-specific file/directory namings, as in Windows folders are separated by `\\` whereas Linux by `/`, this module takes care of that.\r\n- The `fs` functions are named after Linux POSIX operations such as `mkdir` or `rmdir`.\r\n\r\nThe program could use no hardcoding by including the names of files outside as environment variables or pass them as arguments but I saw no need for my case for more complexity.\r\n\r\n### Conclusion:\r\nThis is an easy tool that will save me/you minutes for each job applying session.\r\n\r\nSome references are:\r\n- [https://nodejs.org/api/fs.html](https://nodejs.org/api/fs.html)\r\n- [https://nodejs.org/api/path.html](https://nodejs.org/api/path.html)\r\n- [https://nodejs.org/api/timers.html](https://nodejs.org/api/timers.html)','Applying for software engineering jobs needs some bookkeeping and that bookkeeping takes time over a lot of repeatable mouse clicking hence I decided to make a tool to spare me some more time utilized better else where.','true','true','2021','0','ramihhikmat','Writing A Node.js tool to bookkeep my software engineering job applications','12/01/2021 5:36:14 AM','0','writing-a-node.js-tool-to-bookkeep-my-software-engineering-job-applications');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('2/11/2020 12:13:55 AM','Often when experimenting along with AWS, you spin up EC2 instances that you may use. More often than not restarting those instances results in IP changes, so you attach an Elastic IP address which is an IPv4. Thus is a scarce resource and for this reason, if not used, will result in an hourly charge cited in [EC2 Pricing](https://aws.amazon.com/ec2/pricing/).\n\nNote that this article won't delve into step-by-step specifics but will delve into more of the design/code rather than exactly which buttons to click. I assume you can figure out your way along the AWS console.\n\nSo I sought to create a job that checks all of my Elastic IP (**EIP**) addresses throughout my **enabled** regions. It will not release those EIPs as that is the cloud engineer's responsibility's.\n\nI decided to use [AWS lambda](https://aws.amazon.com/lambda/) for it as it is intended for these types of things on a Node.js runtime. It has a max running time of 15 minutes which is plentiful for these kinds of tasks. I got the function built in this article to run around 900 ms. Will also use [SNS](https://aws.amazon.com/sns/) to notify the intended recipient, be it by E-mail, SMS or any other means the service has to offer.\n\nThe workflow will consist of the following tasks:\n- Run the function on a schedule by AWS EventBridge\n- Check for all of the EIPs\n- Notify to an SNS topic if unattached EIPs exist\n\n## Step 1: creating the SNS topic\nWill create a `Standard` SNS topic named `EIPCheckNotifier`.\n![Step 1](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/1.PNG)\n\nWill also subscribe by email to a temporary email in this case. You could use other means of subscriptions as listed [here](https://docs.aws.amazon.com/sns/latest/dg/welcome.html), some of which have some limits and differing prices.\n\n![Step 1b](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/2.PNG)\n\n## Step 2: create the IAM policy to be used\nAlthough I can use an already existing policies, but for best AWS and security practices, it is always better to use only the required privilliges. This policy will be used to create a Lambda role. That is, a role intended to be used by Lambda.\n\nThe policy below, has 2 statements, both will issue **Allow** effects. As IAM is **Deny** by default, we should define what we need. The first statement issues the ability to describe all elastic IPs in all of my **enabled** regions. The second statement, defines the ability to **publish** to SNS and more specifically specifying a specific resource. That resource is the ARN (Amazon Resource Number) of the SNS topic I want to notify to.\n\n![Step 2](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/3.PNG)\n\nThen created a role that I named `EIPCheckNotifierLambdaRole` to be used by the lambda function next.\n\n## Step 3: create the lambda function\nWill name the lambda and specify it to use the role I created earlier.\n\n![Step 4](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/4.PNG)\n\nThen the following basic code is shown:\n\n![Step 4b](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/5.PNG)\n\nI didn't play with the timeout of the function which defaults to 3 seconds going up to 15 minutes as 2 simple API calls won't amount to much execution time. You may need to increase it to be in the clear, sometimes AWS traffic is congested and API calls will take some time.\n\n## Step 5: the code\nAll code will be placed in the event handler for simplicity sake.\n\nThe code will begin by declaring the 2 clients that will be used, the EC2 client and SNS client. The reason for EC2 is because Elastic IPs are associated with instances and the folks at AWS put their APIs in the EC2 Api. Will also initialize an array to hold the unattached EIPs that will find later on.\n``` Javascript\nconst ec2Client = new AWS.EC2();\nconst snsClient = new AWS.SNS();\nlet unattachedEIPs = [];\n```\n\nThen will issue a `describeAddresses` call to EC2 which will return all EIPs attached or unattached. Now, filtering those EIPs by looping through the `Addresses` array from the response JSON. Checking for EIPs where their attached instance is `undefined` and adding them to the array declared above.\n``` Javascript\nconst eipsResponse = await ec2Client.describeAddresses({}).promise();\n    \nif (eipsResponse.Addresses.length > 0){\n    for (const eip of eipsResponse.Addresses){\n        if (!(\"InstanceId\" in eip)){\n            unattachedEIPs.push(eip);\n            console.log(`unattached EIP: ${eip}`);\n        }\n    }\n}\n```\n\nNow I have all of the unattached EIPs, will first check for number of them, if 0 will return and exit the function as there is no need to notify the subscribers of SNS if there is nothing to worry about. Else, construct a payload string. The `NetworkBorderGroup` of a specific EIP specifies the region the IP was acquired in.\n``` javascript\nlet message = [];\n    if (unattachedEIPs.length === 0)\n        return;\n    \nmessage.push(\"List of unattached EIPs: \n\");\n    for (const eipWithRegion of unattachedEIPs){\n        message.push(`Region: ${eipWithRegion.NetworkBorderGroup} EIP:          ${eipWithRegion.PublicIp}\n`);\n    }\nconst payload = message.join(\"\");\nconsole.log(`Payload:\n ${payload}`);\n```\n\nNow that the paylod is constructed, will notify the SNS topic using the SNS client, linking to the specific ARN topic of mine which is an **anti-attern** because I hardcoded the string but you could always include it as an environment variable or using any other means such as [AWS Systems Manager Parameter Store](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html) which is the recommended AWS way to store often changing/anti-hardcoded parameters which comes with free 4000 parameters to be stored.\n```\nawait snsClient.publish({\n        TopicArn: \"arn:aws:sns:ap-southeast2:472971161478:EIPCheckNotifier\",\n        Message: payload,\n    }).promise();\nconsole.log(\"Published to topic\");\n    \nreturn {\n    statusCode: 200\n};\n```\n\nNow that the code is done, the solution is very easy. All of the API calls to AWS are documented on the following link by AWS: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html\n\nThe entire code of the function is on GitHub:\nhttps://github.com/Morr0/EIPCheckNotifier/blob/main/index.js\n\n## Step 6: create the scheduler using Amazon EventBridge\nNavigating to EventBridge, creating a new rule to run on a fixed schedule. I chose every 24 hours.\n\n![Step 6](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/6.PNG)\n\nThen integrating with the lambda function as a target. Note that you can integrate with other AWS services as well and have more than one target:\n\n![Step 6b](https://blog-static-files-atheer.s3-ap-southeast-2.amazonaws.com/7.PNG)\n\n## Second thoughts on the design and potential improvements:\nAlthough this is one way of doing what I sought out to do, it is not the only way. I did not check for errors, maybe one of the API calls failed, you could always attach a try-catch block along the way and implement retry logic. I kept the solution simple enough.\n\nLambda is the best way to achieve this kind of thing on AWS in my opinion, because it is billed on time of execution and GBs of memory used. Which in this case is negligable.\n\nThe Lambda uses the Internet to communicate with other AWS services, placing the lambda in a VPC will allow the lambda to use the AWS backbone and communicate with resources using VPC endpoints, this will also introduce complexity limiting what VPCs/regions can be accessed. If you are into this type of thing, then maybe this is a way I encourage you to delve into for complete security within the AWS ecosystem.\n\nThis entire system can be automated using [AWS Cloudformation](https://aws.amazon.com/cloudformation/) or even using [Terraform](https://www.terraform.io/).\n\n## Conclusion:\nThis was an interesting little task showing a coordinated use of various AWS services. SNS was used to send out notificiations to subscribers who in this case maybe a cloud engineer. Lambda was used to do the computation part. EventBridge was the event starter.','true','Often when experimenting along with AWS, you spin up EC2 instances that you may use. More often than not restarting those instances results in IP changes, so you attach an Elastic IP address which is an IPv4. Thus is a scarce resource and for this reason, if not used, will result in an hourly charge. I made a small job to notify of unused EIPs daily','true','true','0','2020','ramihhikmat','Checking and notifiying subscribers of unused EIPs using Lambda and Node.js','2/11/2020 12:13:55 AM','0','checking-and-notifiying-subscribers-of-unused-eips-using-lambda-and-node.js');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('16/12/2020 06:19:00 AM','Programs start very small and then start booming. On the way of booming complexity increases and performance becomes an important consideration. While it is always possible to do all data manipulation on the backend application and leave the RDBMS just for storage. You might want to leverage RDBMS's built-in features that offer data manipulation. Network traffic is precious and in the realm of cloud it may be more precious if it was billed. \n\nStored procedures are SQL programs that run in a SQL script to execute SQL code and are what Triggers use. Triggers are events that occur after something happens in the RDBMS. [SQL Server](https://www.microsoft.com/en-us/sql-server/sql-server-2019) is very flexible with triggers, SQL Server will be the RDBMS of choice in this tutorial for the code T-SQL however concepts presented here apply to other RDBMS engines and maybe the same syntax works in others. \n\nJust before delving in, this topic of which side of the equation handling what is not the concern of this article, it is the system designer's choice, I mean whether to use the RDBMS for data manipulation or for just storage. Often when you want to run SQL scripts over night, you may let the RDBMS manipulate it's data or you are fully invested in a different language handling all logic. It does not matter, Only the SQL syntax is presented here.\n\n### Stored procedures:\n\n```sql\nCREATE PROCEDURE dbo.FetchStudents\nAS\nBEGIN\nSELECT FirstName, LastName FROM Student\nWHERE Attendance > 0.95;\nEND;\n```\n\nNote that this is a stored procedure, it can further be simplified to one statement:\n```sql\nCREATE PROCEDURE dbo.FetchStudents\nAS\nSELECT FirstName, LastName FROM Student\nWHERE Attendance > 0.95;\n```\n\nIt is as simple as creating a function except use the word procedure. Now imagine putting another select statement within the `BEGIN/END` block, the stored procedure once executed as below will query all select statements and return all queried.\n```sql\nEXECUTE dbo.FetchStudents;\n```\n\nA stored procedure is way more powerful and is basically a function/method as in other programming languages.\n\nNow a discussion of procedures is incomplete if parameters were not involved and yes you can take in parameters.\n```sql\nCREATE OR ALTER PROCEDURE dbo.FetchStudents \n    @LastMark INT\nAS\nBEGIN\nSELECT FirstName, LastName FROM Student\nWHERE LastMark >= @LastMark;\nEND;\n\nEXECUTE dbo.FetchStudents 90;\n```\n\nThe last line does not include the name of the parameter to put, because SQL infers them. You can put in the name of the parameter in case you have another variable or your order passing them differs.\n```sql\nEXEC dbo.FetchStudents @LastMark = 90;\n```\n\nStored procedures support default values for parameters if you assign them one at the definition.\n\nNow will use output variables which are outputs from the code as follows:\n```sql\nCREATE OR ALTER PROCEDURE dbo.FetchNumberOfStudents \n    @LastMark INT = 90,\n    @Output INT OUTPUT\nAS\nBEGIN\nSET @Output = (SELECT COUNT(*) FROM Student WHERE LastMark >= @LastMark)\nEND;\n\nDECLARE @Num INT;\nEXEC dbo.FetchNumberOfStudents @Output = @Num OUTPUT;\nPRINT @Num;\n```\n\nHere we make the `@LastMark` variable to be optional because we provided a default value and then we declared `@Output` which assigned next to be the count of the table once a condition is met. Then executing the procedure. Note when executing, I declared a variable `@Num`, this is to hold the output. Notice how the `@Output` comes first when assigning to `@Num` and also notice how the `OUTPUT` constraint is used here and up above in procedure definition. This is just how the syntax is. Multiple parameters (regardless of input or output) can be in a stored procedures up to the current limit of 2100 which is plenty.\n\nDropping stored procedures is done same as tables `DROP PROCEDURE dbo.FetchNumberOfStudents;`.\n\nSo stored procedures were examined, you might not want to use them but wait they are extremely useful! Especially for security reasons, here is why. When you call a procedure, you don't know how is the data backed, is it from a view from a table/s or is it directly from a table? More importantly, stored procedure regard input as data not as SQL statements which is huge against SQL injection attacks. Just passing SQL statements when querying has the chance for a SQL injection because normal statements can have statements within if not validated and sanitized, in fact stored procedures can't have SQL injection because input parameters don't regard any input as statements but as data. This last point might hard to grasp and so a better explanation is here: https://security.stackexchange.com/questions/25684/how-can-i-explain-sql-injection-without-technical-jargon/25710 .\n\nNow what? They are secure, that is nice. Something else, since they are created then they are stored in the database and so the execution plan is stored and this is huge because each time normal SQL is queried SQL has to plan an execution plan and that takes time and is expensive in the realm of lots of requests.\n\nNow what if the table/s underlying data definition have changed, new/old indexes? The execution plan of the stored procedure is the same as before the change. This maybe problematic or not. To ensure the RDBMS uses the best available plan you can recompile the stored procedure using a system stored procedure below:\n```sql\nEXEC sp_recompile FetchNumberOfStudents;\n```\n\nNote `EXEC` is the same as `EXECUTE` and `PROCEDURE` is the same as `PROC`. You can also just redefine the stored procedure. Other options do exist in the RDBMS's documentation. The documentation for the above stored procedure is [here](https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-recompile-transact-sql?view=sql-server-ver15).\n\nAnother useful system procedure is when wanting to change DB object names as follows:\n```sql\nEXEC sp_rename FetchNumberOfStudents, 'FetchAll';\n```\n\nFrom the old name to the new name on the right. Here are the [docs](https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-rename-transact-sql?view=sql-server-ver15). Notice that you can also change a column/table's name this way.\n\nNote that you can call stored procedures from stored procedures.\n\n### Triggers:\nAre just events that occur when some of the following things happens (note these things are now specific to SQL Server and may differ for your RDBMS but the concept is the same):\n- `LOGON` (user logging into DB)\n- DDL (Data Definition Language) on database level calls such as on `CREATE`, `ALTER`, `GRANT`(grants user permissions), `DENY`, `REVOKE` qnd `UPDATE STATISTICS`.\n- DML (Data Manipulation Language) corresponding to `INSERT`, `UPDATE` and `DELETE`.\n\nJust by looking at the range of things you can do you see how powerful triggers\nare. A `FOREIGN KEY` or a `PRIMARY KEY` constraint is done as a trigger internally where after data is manipulated (refer to the 3rd item above), it is then triggered to check for condition, if condition is false will throw an error and the operation will fail else will continue to next constraints and triggers until no more defined.\n\nSo a chain of triggers is invoked once any of the events listed above occur which can cause another trigger to occur indirectly. A trigger can be fired at the start of a chain using an `INSTEAD OF` trigger or after the RDBMS does the initial checks as an `AFTER` trigger. Note that orders of a trigger matter, imagine you are making 4 triggers on the same table on the `INSERT` event, then the way these triggers are defined matters.\n\nTriggers are just special stored procedures:\n```sql\nCREATE TRIGGER StudentChanged\nON Student\nAFTER INSERT, DELETE\nAS\nBEGIN\n\nPRINT 'Hello world';\n\nEND;\n```\n\nHere I got a trigger that fires after `INSERT` and `UPDATE`, it is an `AFTER` triggers which means gets executed after all RDBMS checks first then any other user defined triggers and this one and continues the chain if there is any other triggers left. \n\nNote that triggers in SQL Server capture batches not single record changes. That is if a bunch of changes occur at once and are under a trigger then they will all be called on the same trigger call and not get handled individually.\n\nMore discussion of triggers needs a flip through the [documentation](https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql?view=sql-server-ver15). Triggers are a vast topic especially when moving into DDL and LOGON triggers where these cannot be implemented on an application backend and are database specific. DML triggers are a design choice.\n\nOne last thing to note is that `INSTEAD OF` types are only applicable to DML events in SQL Server.\n\n### Conclusion\nHere is where the article ends, triggers gives the sense of event-driven-development (EDD) to SQL. They are made possible due stored procedures which are what runs the data handling of many of the secure sites outthere. They can cause more complexity and confusion if not handled correctly, bugs do come out when the developer on an application doesn't know of trigger's existence.\n\nThanks for reading.','true','Software is simply the use of the same of the same things over and over again for the better or worse. This article covers some of the powerful constructs that are always of use in SQL.','true','true','0','2020','ramihhikmat','SQL: From stored procedures to triggers','16/12/2020 06:19:00 AM','0','sql:-from-stored-procedures-to-triggers');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('28/11/2020 11:32:40 AM','So as you progress in SQL you need to build more and more complex scripts. Maybe you want to make a function that checks for forbidden words stored in a table before an insert/update operation. You may do that in the backend program or you may do it in your RDBMS engine. I will be using [SQL Server](https://www.microsoft.com/en-us/sql-server/sql-server-2019) for this article, the concepts carry on to different RDBMSs but syntax may differ. This article does not delve into design decisions, it is basically a SQL tutorial.\n\nSince SQL is a programming language, it carries with it conditionals and functions, those include if/else statements and switch statements. Loops do exist however they will not be covered here. What makes SQL different is the fact that the engine does the how, and you just do the what. That is, you say what you want with some procedural elements mentioned above (conditonals, loops and functions for code reuse and efficiency).\n\nThis article will cover functions and user-defined-functions (UDFs) then will go into conditionals and how you can use them.\n\n### Functions:\nA function is a set steps that are called as one unit. Functions can call other functions or themselves recursively. SQL server provides many types of functions found here: https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15. \nSome of which are what is called a **deterministic** and others are **non-deterministic**. The difference is the predictability, that is, a deterministic function expects for a certain passed in value the same output while a non-deterministic one is where a different output is returned every single time such a random number function as `RAND()` in SQL which you can call like below to fetch a random number:\n```sql\nSELECT RAND();\n```\n\nThis will return a different value anytime is called.\n\nA more useful function is when I want to know the count of a table (how many records do exist):\n```sql\nSELECT COUNT(*) AS 'No. of students' FROM Student;\n```\n\nNote how I used the `*` as a parameter for the function, in this case I passed in which columns to count, since each record holds all the columns, `COUNT()` does not worry about the given argument in this case. A reference of this function is here: https://docs.microsoft.com/en-us/sql/t-sql/functions/count-transact-sql?view=sql-server-ver15.\n\nA more interesting function is the `AVG()` which computes an average of given values:\n```sql\nCREATE TABLE Numbers(\n    Number INT NOT NULL\n);\n\nINSERT INTO Numbers VALUES(RAND() * 1000);\nINSERT INTO Numbers VALUES(RAND() * 1000);\nINSERT INTO Numbers VALUES(RAND() * 1000);\nINSERT INTO Numbers VALUES(RAND() * 1000);\nINSERT INTO Numbers VALUES(RAND() * 1000);\nINSERT INTO Numbers VALUES(RAND() * 1000);\n\nSELECT AVG(Number) FROM Numbers;\n```\n\nHere I call `RAND()` as a parameter timed by 1000 due to `RAND()` generating small decimals. The `AVG()` takes in the column we want to average over and averages it by going through all values.\n\nNow I want to make a report of my numbers, I want the minimum, maximum and average, how will I do that, you can build your own function for that but T-SQL has built-in functions for those operations as follows:\n```sql\nSELECT AVG(Number) AS Average, MIN(Number) AS Minimum, MAX(Number) As Maximum FROM Numbers;\n```\n\n### User Defined Functions (UDFs):\nCreating your own function is simple as follows:\n```sql\nCREATE FUNCTION REPORT(@Number AS INT)\nRETURNS INT\nAS\nBEGIN\n\nRETURN @Number * 10\n\nEND;\n```\n\nHere I made a function that takes in an int and multiplies it by and then is returned. Note the use of `@` sign, this is to show that the identifier after the sign is a variable name. In this case the variable name is an argument of a function. You can have zero or more arguments. Then there is the `RETURNS` which indicates the return value type. A function can return normal data types (scalar values) or a table. A table is the same thing returned by `SELECT`. Multiple lines can be within the function (between the `BEGIN` and `END`) but the last statement is to be a `RETURN` to return to the caller.\n\nNow that we have made a function, how would I go about calling it?\n```sql\nSELECT dbo.REPORT(10);\n```\n\nThat's it. \n\nThe `dbo` is the [schema](https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/create-a-database-schema?view=sql-server-ver15).\n\nNote that this function is called for every loop in a `SELECT`, that is for every value if we are going to use it on a table/s as below:\n```sql\nSELECT dbo.REPORT(Number) FROM Numbers;\n```\n\nHowever you may have noticed now in this case, the amount of function calls is proportional to the amount of records including `WHERE` conditions if any. Why is that? Why when I called in the `AVG()` I only got back one record? Those `AVG()`, `MIN()` and others of this type are called [Aggregate functions](https://docs.microsoft.com/en-us/sql/t-sql/functions/aggregate-functions-transact-sql?view=sql-server-ver15). Not all built-in functions are aggregate.\n\nTo create an aggregate function in SQL Server is different to other RDBMS, in SQL Server, it requires the use of [CLR](https://docs.microsoft.com/en-us/dotnet/standard/clr) assemblies which are [.NET](https://docs.microsoft.com/en-us/dotnet/core/dotnet-five) specific constructs.\n\nNow I want to delete the function as follows:\n```sql\nDROP FUNCTION dbo.REPORT;\n```\n\nNow you might say that is all nice, any drawbacks to using functions. Well the answer is yeah, there exists some things that are not allowed within functions. The first thing is that those functions are not supposed to be mutating data in any shape or form. In other words, you cannot insert/update/delete. Since they are used for `SELECT` calls which makes them **readonly**. Functions were made to adhere to the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single-responsibility_principle) as well as for code reuse adhering to [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself). Moreover, UDFs cannot call non-deterministic functions nor can they call stored procedures which are another SQL construct similar to functions but on a grander scale.\n\n### If statements:\nTo use if statements, you can use them outside functions/stored procedures however their use like so is debatable. A good place is inside functions or stored procedures. Will create a function that will do some dummy logic, in this case will comment on each number.\n```sql\nCREATE FUNCTION dbo.COMMENT(@number AS INT)\nRETURNS CHAR(16)\nAS\nBEGIN\n\nDECLARE @Result CHAR(16);\n\nIF (@number < 250)\n    SET @Result = 'Too small';\nELSE IF (@number BETWEEN 250 AND 750)\n    SET @Result = 'In the middle'\nELSE\n    SET @Result = 'Big'\n\nRETURN @Result;\nEND\n```\n\nAnd used as follows:\n```sql\nSELECT Number, dbo.COMMENT(Number) AS 'Comment' FROM dbo.Numbers;\n```\n\nFirstly, the function called `COMMENT` takes in an int and expects to return a `CHAR(16)`. It also declares a new variable bound to the function called `Result`. Now we use the if/else condituonals. An if statement first checks if number is less 250 then it will run the statement below it and then jump outside the loop. If the condition is not satisfied, will go to the else if, then check the condition, if true will execute the statement below, else go to the else statement as a last resort. Note that you can have 0 or more else ifs. Also you may have only an if statement.\n\nThe use of the `BETWEEN` clause is the same as below:\n```sql\n@number >= 250 AND @number <= 750\n```\n\nNote that `BETWEEN` is inclusive on both ends.\n\nNow you could put in more logic in the function, however bear in mind this gets called for each `SELECT` iteration when used with a table. Not only that, all variables within the function block (from BEGIN to END) are different for each function.\n\n### CASE statement:\nA different way to acheive the same logic as above is by using the case statement:\n```sql\nCREATE FUNCTION dbo.COMMENT(@number AS INT)\nRETURNS CHAR(16)\nAS \nBEGIN RETURN CASE\n    WHEN @number < 250 THEN 'Too small'\n    WHEN @number BETWEEN 250 AND 750 THEN 'In the middle'\n    ELSE 'Big'\nEND\nEND\n```\n\nThe perspective here has changed. A case statement is more suited to a specific variable value than a range however T-SQL does allow for a range like the above. However, the purpose if and case statements serve is the same. If statements are more flexible all the time especially in SQL.\n\n### Conclusion:\nAs SQL is a declarative language when you start learning it, when you advance you notice you need the use of a vocabulary that allows more freedom. The benefits of functions are huge generally in programming so long as you don't call them a lot. They incur some overhead that amounts to performance issues when many records are involved. An expert in SQL optimizations would be more knowledgable in such a thing as it is outside of the scope of SQL but in the scope of the specific RDBMS engine in use.\n\nThanks for reading through this.','true','As SQL is a declarative language when you start learning it, when you advance you notice you need the use of a vocabulary that allows more freedom. The benefits of functions are huge in programming. Along with conditionals, all types of programs can be made.','true','true','0','2020','ramihhikmat','SQL: Functions and Conditionals','28/11/2020 11:32:40 AM','0','sql:-functions-and-conditionals');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"CreatedYear\",\"Likes\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('23/12/2020 12:19:00 PM','Most of the time people deal with structured data and structured data has reasons for being so. This data is typically queried regularly on the same columns most of the time and you think you can squeeze some performance out of it. Most of the time you can improve performance to levels unseen before. As structured data can be indexed and looked up like a book index has the ability to locate pages quickly based on words rather than going through the entire table each time.\n\nThis is a convincing argument for people and computers. Since less resources are used if a well indexed design is achieved however design is not the concern of this article, the basics and capabilities of SQL are presented here. The RDBMS that is used is [SQL Server](https://www.microsoft.com/en-us/sql-server/sql-server-2019) and be aware that some things covered here maybe the same concepts in other RDBMSs but have differing syntax.\n\n### Without indexes:\nSo you create a table without a primary key and coast along. You then fill it up with lots of records and you see it is fast and then you fill more and more. Now you want to read something and that something maybe in the middle or the last and you notice it is taking forever even though you are filtering with an id column. Each read query is expensive because there is no structure in the way the data is stored on disk.\n\nThis is an example of a [heap table](https://docs.microsoft.com/en-us/sql/relational-databases/indexes/heaps-tables-without-clustered-indexes). There is no order, no anything advantageous for a read operation. There is one thing, you can write fast because no index is involved, you can use it to write logs. Now this is a design concern but logs should not be stored for a relational database, even though there is not much overhead, the system is not designed for logs. Other efficient means of log storage do exist that are of `O(1)` complexity in writing. \n\n### With indexes:\n\n```sql\nCREATE TABLE Student(\n    Id BIGINT IDENTITY(1,1) NOT NULL PRIMARY KEY,\n    FirstName CHAR(32),\n    LastName CHAR(32),\n    LastMark INT,\n);\n```\nThe primary key above has an index. This index is where all the table's data is stored. It is also called a **clustered index**. Due to it's name, it means that all data in one cluster.\n\nNow imagine you want to fetch the table for a particular `Id`, you can have a full table scan by going through each record which is fine for a small table of around 1000 records or less however is unbearable over that. If the element you were looking for was the first then you got lucky but the worst case the element your looking for will be the last. So this scanning from the start to the end is called a **forward** scan and is one option of scanning data. Obviously full table scans are not favored ever however sometimes they maybe the best query determined by the RDBMS query planner.\n\n```sql\nSELECT * FROM Student WHERE LastMark = 100;\n```\n\nNow even though this is a forward table scan it is really a forward clustered index scan, the reason being we have an index `Id`. Now we can do it backwards easily as **backward** scan as the following:\n```sql\nSELECT * FROM Student WHERE LastMark = 100 ORDER BY Id DESC;\n```\n\nIt may take some time due to scanning each record. Making it a forward scan may or may not help. My point is that the user of the database 99% of the time does not know if the record is closer to the end, to the front or in the middle.\n\nThe database engine does it's job by planning the best possible path of execution based on many statistics, constraints and indexes available.\n\n### Why size of index matters:\nNow let's see the size of the table to see how the bigger the clustered index maybe. Each table record has:\n- Status bits\n- Fixed length data\n- Null bitmaps (number of NULLs in columns)\n- Variable length data\n  \n### Indexing:\nThe above 4 things all correspond to one record, imagine a huge record. Just scanning the record to go to the next is a chore for the CPU. So other indexes are created just to hold a specific column/s as well as a pointer to the original record and that is way lighter. In the databases world, it does exactly the same things, it is for fast lookups. Most of the time, people don't just query the table by the primary key they may query by age, gender, date of birth and other things. So you would make an index for something that gets queired heavilly for faster performance or otherwise would cause a table scan.\n```sql\nCREATE NONCLUSTERED INDEX LastMarkIndex ON Student(LastMark);\n```\n\nHere an index is created, note that it is a non-clustered. There can be only one clustered index and many non-clustered indexes in SQL Server. Now it is on the `LastMark` column.\n\nSince a non-clustered does not store the entire record, when using an index for reads, the RDBMS does a look up using the index and gets the address of the clustered record and then goes straight to the clustered record.\n\n```sql\nDROP INDEX LastMarkIndex ON Student;\n\nCREATE NONCLUSTERED INDEX LastMarkIndex ON Student(LastMark)\nINCLUDE (FirstName);\n```\n\nNow the above script first deletes an index (the syntax differs just a little bit from others `DROP`'s you have to say which table). Then we create the same index we did above except in this case I add a `Firstname` column to be stored along with this index so I don't have to look up the actual clustered index if I just need to know the `FirstName` based on the above index.\n\nNow this seems like a nice thing, index everything. You can until you hit the hard limitations which is a lot for SQL Server. The more indexes you add the more the writes become slow. The reason is simple, every write operation needs to update all involved indexes. Even though the RDBMS optimizes this aspect to only update the needed indexes, at worst you write to all indexes when adding/deleting records.\n\n### Filtered index:\n```sql\nALTER TABLE Student ADD WasInvolvedInFight BIT DEFAULT 0;\n\nCREATE NONCLUSTERED INDEX WasInvolvedInFightIndex ON Student(WasInvolvedInFight)\nWHERE WasInvolvedInFight = 1;\n```\n\nNow we add a new column `WasInvolvedInFight` and make a new non-clustered index with a `WHERE` condition, whereby to only index the column where the value is equal to the condition. The condition can include other columns that are not indexed here. That is all a filtered index is.\n\n### Include index:\nThis is a normal index that can include other columns with it, if you are certain you will lookup another column using this index then you can include it inside the index:\n```sql\nCREATE NONCLUSTERED INDEX WasInvolvedInFightIndex \nON Student(WasInvolvedInFight)\nINCLUDE (Id)\n```\n\nAbove, instead of reading the `Id` column from the clustered record, it will be read here from the index and as such a performance improvment. Excitement does not stop there, look below you can also make an included index be **filtered**:\n```sql\nCREATE NONCLUSTERED INDEX WasInvolvedInFightIndex \nON Student(WasInvolvedInFight)\nINCLUDE (Id)\nWHERE WasInvolvedInFight = 1 AND LastMark >= 98;\n```\n\n### Conclusion:\nNow other types of indexes do exist in SQL Server such as a column store index which is a different way of storing data. These other types will not be covered in this article as their uses and applications are advanced.\n\nSome references are (SQL Server specific):\n- [Index design](https://docs.microsoft.com/en-us/sql/relational-databases/sql-server-index-design-guide?view=sql-server-ver15)\n- [Heap tables](https://docs.microsoft.com/en-us/sql/relational-databases/indexes/heaps-tables-without-clustered-indexes?view=sql-server-ver15)\n- [Record size](https://www.red-gate.com/simple-talk/sql/database-administration/sql-server-storage-internals-101/)\n\n\nHere a great deal was covered on basics of indexes. Their use is essential in high performance relational database systems. Now how are indexes stored on disk was not covered because it is not the concern of this article nor is the same across RDBMSs.','true','Software is simply the use of the same of the same things over and over again for the better or worse. This article covers some of the powerful constructs that are always of use in SQL.','true','true','2020','0','ramihhikmat','SQL: Indexes','23/12/2020 12:19:00 PM','0','sql:-indexes');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('13/12/2020 08:52:40 PM','So often you increase your programming IQ in SQL and you find yourself not knowing how to repeat a thing multiple times or having to create the database as the source of truth where backend programmers may bug out the application. You turn to while loops for looping and constraints and views for sources of truths. This article will use [SQL Server](https://www.microsoft.com/en-us/sql-server/sql-server-2019) for demonstration however the concepts (and maybe syntax) apply to most other RDBMS engines.\n\nThe use of while loops is not that much needed in SQL from a developer's perspective given that SQL is a language that does what is needed not how it is needed but they are useful. Contraints are constraints the same way in english, they can be applied at a table/column level and are useful for validating data. Views are the beast of the article where you can set a table for your query needs.\n\n### The while loop:\nA loop is the third construct of an algorithm following sequence and conditionals. A while loop is a type of a loop that does the same thing as any other loops including a for loop. Note that T-SQL has only a while loop. As all loops loop there is no need to have different types. \n\nA while loop loops until a condition is met:\n```sql\nDECLARE @number INT = 1;\n\nWHILE @number <= 10\nBEGIN\n    PRINT @number\n    SET @number = @number + 1\nEND\n```\n\nHere a variable `number` is declared and set to 1. Then a loop is established with a condition of `number` smaller or equal to 10. Then the usual suspects which are `BEGIN` and `END` to enclose a block. The block has the logic where I increment the number to acheive the goal of the loop. You could not increment the number and the loop will run forever.\n\nThis is all fine, what if I want to loop through each item in a table, `SELECT`'s job is just to do that. You can use a while loop to acheive such a thing however you would have to introduce multiple variables to keep track of count. [Cursors](https://docs.microsoft.com/en-us/sql/t-sql/language-elements/cursors-transact-sql?view=sql-server-ver15) exist to do such things however their use is not within this tutorial. Thus, if you need to loop through a table, the best way in my opinion is to wrap your logic in a function and call it using `SELECT`.\n\nNow let's say I am looping using the above SQL, if a number 8 is reached I want to exit the loop how would I do that?\n```sql\nDECLARE @number INT = 1;\n\nWHILE @number <= 10\nBEGIN\n    PRINT @number\n\n    IF @number = 8\n        BREAK;\n    SET @number = @number + 1\nEND\n```\n\nAn if statement was just used to check the condition and a `BREAK` statement broke out. Now what if this `BREAK` keyword was in a loop (inner-loop) that is in another loop (outer-loop). Then this inner-loop will break to the outer-loop and not exit both or however many that exist.\n\nTo skip to the next loop iteration is very simple. Just the use `CONTINUE` keyword.\n\n### Constraints:\n`PRIMARY KEY` is an example of a constraint, a constraint is basically a feature of a table. This specific constraint makes a column the primary key of a table. Others do exist. \nThe list is:\n- PRIMARY KEY\n- FORIEGN KEY\n- CHECK\n- UNIQUE\n- NULL\n- NOT NULL\n- DEFAULT\n- INDEX\n- IDENTITY (SQL Server)\n  \n`INDEX` will not be covered in this article. `PRIMARY KEY` and `FORIEGN KEY` have been covered in a previous article of mine: https://www.ramihikmat.net/article/2020/sql:-primary-keys-through-to-foreign-ones-then-joining-tables\n\nThe `NULL` and `NOT NULL` constraints can be easily used as follows when defining a table:\n```sql\nCREATE TABLE Sample(\n    SampleNum BIGINT NOT NULL,\n    SecondNum BIGINT NULL\n);\n```\n\nThe `DEFAULT` constraint adds a default value if nothing was provided as follows:\n```sql\nCREATE TABLE Sample(\n    SampleString CHAR(20) DEFAULT 'Default Value'\n);\n```\n\nThe more customized constraint and beloved one, `CHECK` is basically a [predicate](https://en.wikipedia.org/wiki/Predicate_(mathematical_logic)), if not true will cause an error. It is used as follows:\n```sql\nCREATE TABLE Sample(\n    SampleNum INT CHECK(SampleNum > 2500)\n);\n```\n\nThis will make sure that the column `SampleNum`'s value is greater than 2500.\n\nA more general constraint syntax is the one below where it is not specific to any column but is table wide:\n```sql\nCREATE TABLE Numbers(\n    Number INT,\n    Number2 INT,\n    CONSTRAINT PassCriteria CHECK(Number > 50 AND Number2 = 10)\n);\n```\n\nNow I present an interesting use, more often than not when designing, your system evolves with time and so you may want to add a new constraint. Adding a new constraint will involve applying it to all existing records, it will not add it when the predicate falls and an error is the result. You can either store the old data in another table or use the `NOCHECK` keyword.\n```sql\nCREATE TABLE Numbers(\n    Number INT\n);\n\n-- Insert some\n\nALTER TABLE Numbers WITH NOCHECK ADD CONSTRAINT Condition CHECK(Number >= 100);\n```\n\nNote the `WITH NOCHECK` was placed at the front of the constraint due to SQL Server syntax however for you RDBMS it may be different. The same way `NOCHECK` was used, you can easily use `CHECK`. Although `CHECK` is the default on my system, you can configure it depending on the RDBMS.\n\n### Views:\nNow views may seem unnecessary when delved into however they are so useful in everyday design. A view a table that is not backed by anything. What is that you might say? Well it is a virtual table. It acts and behaves the same way as a table but it's underlying data maybe from more than one table. Just think of the word [view](https://www.dictionary.com/browse/view). It is better illustrated in an example, let's say we got 2 tables, People and Animal in a fictitious city council database. I will inner join on the tables and get back people who have animals:\n```sql\nSELECT * FROM People AS p INNER JOIN Animal AS a ON p.AnimalId = a.Id;\n```\n\nNow this is easy enough right? Yes. Let's say that I want all people who have registered cars as well as the above where the cars are unlicensed for an animal to be inside:\n```sql\nSELECT * FROM People AS p \nINNER JOIN Animal AS a ON p.AnimalId = a.Id\nINNER JOIN Car AS c ON p.CarId = c.Id\nWHERE c.LicensedForAnimal <> a.RequiredCarLicense;\n```\n\nNow it is getting complicated to track, maybe I want to simplify it. Or maybe the backend engineer in another language who queries the database forgets to include the condition. Or even a data scientist is looking for anamolies in the city council's data, here people problems arise. Views come to rescue as follows:\n```sql\nCREATE VIEW PeopleWithAnimalsWhoseCarsAreNotLicensedForAnimals\nAS\nSELECT * FROM People AS p \nINNER JOIN Animal AS a ON p.AnimalId = a.Id\nINNER JOIN Car AS c ON p.CarId = c.Id\nWHERE c.LicensedForAnimal <> a.RequiredCarLicense;\n```\n\nThis view is now basically a virtual table that I can query. It is a stored `SELECT` statement and has database rights. Those database rights are of importance, maybe you don't want to let developers direct access to the tables involved by using different schemes and user permissions. So a view they can query to obtain only the needed data. It all boils down to design. \n\nOne use of views is for internal privacy, imagine an order checker in a warehouse wants to check all orders are well boxed before dispatch. A view will only be designed for him/her to see the order Id and any comments by staff. The age of the order receiver is not important to him/her. That is what a view makes possible not to ever include the age by mistake.\n\nQuerying views is done the same way as tables as well as deleting them.\n\nNow views are not stored on disk, a more capable view is a [materialized/indexed view](https://docs.microsoft.com/en-us/sql/t-sql/statements/create-materialized-view-as-select-transact-sql?view=azure-sqldw-latest) which is a view that is it's own table. This materialized view is potentially useful for multiple SQL joins where perhaps the join is done once and persisted to table.\n\nThese kinds of decisions are the designer's keeper at night and not the concern of this article.\n\n### Conclusion:\nSoftware is simply the use of the same of the same things over and over again for the better or worse. \n\nThanks for reading.','true','Software is simply the use of the same of the same things over and over again for the better or worse. This article covers some of the powerful constructs that are always of use in SQL.','true','true','0','2020','ramihhikmat','SQL: Loops through Constraints ending up in Views','13/12/2020 08:52:40 PM','0','sql:-loops-through-constraints-ending-up-in-views');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('22/11/2020 1:35:39 PM','This lesson will delve into the concept of primary and foreign keys then ending up joining them to utilize the full power of relationships. A relationship is one whereby one table has a relationship with another, an example would be a student table has a relationship with a class table. That relationship may be **one to one** where one student can have one class and the inverse. It can also be a **one to many** where one student can have multiple classes and also many students having many classes as a **many to many** relationship. The choice of a relationship is a design concern where the SQL involved won't vary much. I will be using [Microsoft SQL Server](https://www.microsoft.com/en-au/sql-server/sql-server-2019).\n\nTo lay the ground for a relationship, a primary key must be involved. A primary key is where a column/s is identifying a unique record. A primary key involves structuring the data in an index where the way that index is RDBMS dependant. An index is not covered in this article. A primary key will allow fast lookup when using a `WHERE` on it. Not only that, but it identifies a unique record in the table.\n\nA foreign key is a normal column that references a primary key/s in another table. That is all there is to it.\n\nA join is a construct whereby a relationship of one primary key used to resolve a foreign key relationships with other table/s. In other words, you can use it to show relationships across tables with many conditions.\n\n### Creating tables with primary keys:\nI will create Student and Class tables as follows with a primary key constraint:\n```sql\nCREATE TABLE Student(\n    Id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,\n    Name VARCHAR(32) NOT NULL\n);\n\nCREATE TABLE Class(\n    Id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,\n    Name VARCHAR(32) NOT NULL\n);\n```\n\nNote the use of an `IDENTITY(1,1)` after the `INT` data type. It is a constraint that is not standard SQL. It automatically generates a new Id number starting from `1` then increments it by `1`. The first argument in the `IDENTITY` is the starting position of the index, the second is the increment or by how much to increment each record's Id from the last.\n\n### Altering existing tables by adding a primary key:\nLet's say I have a table called `Pickle`, It does have an `Id` field that I want to make it a primary key. Let's add one.\n```sql\nALTER TABLE Pickle ADD PRIMARY KEY(Id);\n```\n\nNote it is this easy. The `Id` column is an `INT`. You cannot add an `IDENTITY` constraint by altering an existing column. You have to drop that column and then add a new column with `IDENTITY`. This is a SQL Server semantic.\n\nAnother thing is that by adding a primary key to an existing table, all the existing records must be unique on that column in value or else will fail.\n\n### Adding foreign keys:\nWill make a simple one-to-one relationship. Let's say a student can only have one class and one class can only have one student, that is a one to one. Since I have created the tables, I will just add new columns to one table. **Note here it is a design decison, I will not relate to each table from the other**. Will add the student id to the class table.\n```sql\nALTER TABLE Class ADD StudentId INT UNIQUE FOREIGN KEY REFERENCES Student(Id);\n```\n\nOr for a new table like so:\n```sql\nCREATE TABLE Class(\n    Id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,\n    Name VARCHAR(32) NOT NULL,\n    StudentId INT UNIQUE FOREIGN KEY REFERENCES Student(Id)\n);\n```\n\nNow we can try adding new classes for the same student and will get an error because of the `UNIQUE` constraint. It makes sure that this is a true 1-to-1 relationship.\n\nMoving on to one-to-many relationships, the `UNIQUE` keyword does not make sense and by taking it out we would be able to have 1 student in many classes. That's all.\n\nWhat if we want a many-to-many relationship, where many students can have many classes and vice versa, while this is the real life scenario, this is a design decison. The most effective way to tackle this with minimum data redundancy is to use a [Junction table](https://en.wikipedia.org/wiki/Associative_entity).\n\n**Why bother with a foreign key now that we see how it works?** Becuase of the way it is used, RDBMSs have `relation` as their first word. Then let's say you just added a column without adding the constraint, how will you check for integrity. How can you be sure that a specific record exists? You would have to check it right? Well the engine does that for you when adding a foreign key constraint and won't allow the insertion of non-existent record Id in the foreign table. Cool right? It gets cooler, let's say the record in the primary table got deleted, what happens now? Without a foreign key constraint nothing will happen, with it you can specify a `ON DELETE` property to say whether to delete the foreign records, set them null or other options... Now think of the power that exists!\n\n### Joining tables:\nHere's the power of relational databases, you query for multiple tables using foreign key relationships to include or exclude what you want. Let's query all classes in my 1-to-many relationship where the student id is 1:\n```sql\nSELECT * FROM Class AS Class INNER JOIN Student ON Student.Id = Class.StudentId;\n```\n\nIf you had more students entered, notice that those who did not have a class were not displayed. This is because we used an inner join. An inner join only gets what is common to both tables. Other join types do exist, the most popular is left join (or it's opposite a right join) these also result in showing the other record per side of the join. What is the side of the join you might say? It is which table we joined, if left join then in this case would be the student else if it was a right join it would be the class table. Other joins do exist and are way less popular here: https://en.wikipedia.org/wiki/Join_(SQL).\n\nIt is basically which side of the [Venn diagram](https://en.wikipedia.org/wiki/Venn_diagram) you're querying.\n\nNow that we've joined, if you've followed my example you would see the column `Id` repeated in the join, that is because it is displayed once for the student table and other time for the class table, what if we want to know which is which, well by naming them, it is easy as follows:\n```sql\nSELECT c.Id AS ClassId, c.Name AS ClassName, c.StudentId, s.Name AS StudentName FROM Class AS c INNER JOIN Student AS s ON s.Id = c.StudentId;\n```\n\nNotice here we selected what to fetch and also used the `AS` keyword. `AS` is very useful to rename a column when displaying as well as for less typing.\n\n### Conclusion:\nA great deal has been covered showing how simple constructs has been evolved to make a powerful system that is used by most of the web for data querying.\n\nThanks for reading through.','true','This lesson will delve into the concept of primary and foreign keys then ending up joining them to utilize the full power of relationships in an RDBMS engine that is utilized by most popular websites.','true','true','0','2020','ramihhikmat','SQL: Primary keys through to foreign ones then joining tables','22/11/2020 1:35:39 PM','0','sql:-primary-keys-through-to-foreign-ones-then-joining-tables');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('15/11/2020 1:04:58 PM','[SQL](https://en.wikipedia.org/wiki/SQL) is the industry's standard on querying databases. It has been alive since the 1970s. It is used all throughout the software spectrum from banks to social media to small blogs. It is a standard that is adopted by relational database management systems (RDBMS) such as [Microsoft SQL Server](https://www.microsoft.com/en-au/sql-server/sql-server-2019), [MySQL](https://www.mysql.com/), [PostgreSQL](https://www.postgresql.org/) and more... Note that RDBMS don't have to use SQL but since it has been for so long, it is accepted as the standard. Other query languages exist and other database technologies exist as well. This article will be concerned with SQL using Microsoft SQL Server. The basics presented here will work on most popular systems.\n\nMicrosoft SQL Server's SQL implementation is not fully SQL standard compliant nor any other SQL RDBMS is fully compliant. This flavour is called Transact-SQL (T-SQL). It contains SQL Server specific constructs in-addition to SQL implementations.\n\nInstalling and running the server will not be the concern of this article. Installing it is walkedthrough here: https://docs.microsoft.com/en-us/sql/database-engine/install-windows/install-sql-server?view=sql-server-ver15 \n\nI will be using the developer edition which will be limited for non-production environment. Other licenses do exist depending on your needs. The medium of which you communicate with the server is to your preference, I will use [Microsoft SSMS](https://docs.microsoft.com/en-us/sql/ssms/sql-server-management-studio-ssms?view=sql-server-ver15). You may use Visual Studio Code or your any SQL editor, even using the MS-SQL CLI is fine.\n\n### Creating a database:\nAfter connecting to the server, let's create the database. A **database** is a concept whereby it has one or more tables that involve relationships. An example maybe a school database where it may have a table for students, exams, roles, reports and more. Designing a database is dependent on the problem that is to be solved. \n\nSo let's create one called `LearningDB`:\n```sql\nCREATE DATABASE LearningDB;\n```\n\nNow a database is created. Note the command `CREATE` is self-explanatory as well as the `DATABASE` command this is due to the nature of SQL as a **declarative** language. A **declaritive** language is one where you specify what you want and the RDBMS works towards the output, in other words you only specify what you need and the SQL engine will take care of doing it.\n\nNow that the database is made, we cannot create another database with the same name unless it is deleted using the following command:\n```sql\nDROP DATABASE LearningDB;\n```\n\nWill now recreate the database. Will use it now using the following:\n```sql\nUSE LearningDB;\n```\n\nNow we can do all database related operations here, such as creating tables.\n\n### Creating the table:\nA table is a layout of data stored. It contains columns that define data and rows that are individual records of data. A table can have one or more columns.\n\nLet's create a student table with the following attributes:\n- Name: which is the full name of a student\n- Age: an age\n- Nickname: nickname\n  \n```sql\nCREATE TABLE Student(\n    Name VARCHAR(32) NOT NULL,\n    Age  TINYINT NOT NULL,\n    Nickname VARCHAR NULL\n);\n```\n\nNote the syntax, all columns of a table go within brackets, the name is the first thing then the data type to be used then any constraint then a comma for the next column. For the `Name` column, I have used A `VARCHAR(32)` Which is a variable character that can hold up to 32 [ASCII](https://en.wikipedia.org/wiki/Ascii) characters, A `NVARCHAR` May be used to hold [Unicode](https://en.wikipedia.org/wiki/Unicode) characters however a Unicode character will use 2 bytes instead of 1 byte of ASCII. Other types do exist, the discussion of which types to choose is not the concern of this article. The `NOT NULL` constraint says that one a new record is input to this column it must have a value. I Used `SMALLINT` for the `Age` column as it is capable of holding values from 0 to 255 which is enough for an age and also uses 1 byte. Notice the `Nickname` column's constraint is just `NULL`, this will default the value of this attribute to nothing if nothing is provided\n\nA complete SQL guide and reference can be found here: https://docs.microsoft.com/en-us/sql/sql-server/?view=sql-server-ver15\n\n### Basic operations:\nLet's view the current records available (currently none):\n```sql\nSELECT * FROM \"Student\";\n```\n\nThe `*` above indicates to bring all records back if any. The `SELECT` command is used for selecting specific data. While the `FROM` command specifies which table to query.\n\nLet's now insert some stuff:\n```sql\nINSERT INTO \"Student\" VALUES ('John Doe', 12, 'Jo');\nINSERT INTO \"Student\"(Name, Age) VALUES ('John Bay', 12);\nINSERT INTO \"Student\"(Name, Age) VALUES ('Bill Wick', 13);\n```\n\nHere we insert 3 records to the table. The first line, we insert all 3 attributes. While the next 2 inserts, we specify after the table name within the brackets which columns to insert into. This will specify which columns are we writing to, without specifiying which columns, an error will occur since the SQL engine does not know which columns to choose by it's own unless all columns are inputted. \n\nNow will see what is stored using:\n```sql\nSELECT * FROM \"Student\";\n```\n\nWill display all. Let's say now I don't want to view the `Nickname` column, hence I will not select it using the below:\n```sql\nSELECT Name, Age FROM \"Student\";\n```\n\nWhat if I now try to only input in the `Name` column as follows:\n```sql\nINSERT INTO \"Student\"(Name) VALUES ('Mike');\n```\n\nAn error will occur, saying `Age` cannot be `NULL` and so here is where the RDBMS does it's checkings we specified above.\n\nBy now we may want to comment on the code we've written, it is very easy just as below:\n```sql\n-- This is a comment\n```\n\nWhat if now that I want to list only students where their age is 12:\n```sql\nSELECT * FROM \"Student\" WHERE 'Age' = 12;\n```\nThe `WHERE` command is like an `if` statement where you specify which value to look for over all present records.\n\nMaybe I want all students as above as well as where they have a `Nickname`. Let's see how:\n```sql\nSELECT * FROM \"Student\" WHERE Age = 12 AND Nickname IS NOT NULL;\n```\n\nHere the `AND` keyword adds another condtion which in this case is `NOT NULL` ore in other words, has a value.\n\nNow I want to delete everything I inserted for whatever reason:\n```sql\nDELETE FROM \"Student\";\nSELECT * FROM \"Student\";\n```\n\nOoh, nothing is left, it deletes everything, which is dangerous, maybe I want students with let's say age 12 be deleted. I need to first re-insert some data to then delete.\n```sql\nDELETE FROM \"Student\" WHERE Age = 12;\n```\n\nWhat if I delete with a condition of age 3. Nothing will happen as the database engine will look through the table until it finds it else nothing happens.\n\nWhat if I want to delete the table due to a design flaw, I may be able to edit it using the `ALTER` command which is not covered in this article. The same way I deleted a database above, I will be able to delete a table just like below:\n```sql\nDROP TABLE Student;\n```\n\n### Conclusion:\nThis has been a basic look on SQL, it is a rich language that keeps evolving. Multiple months of study will not fulfill the combinations of using it. Just like any other programming language, learning never stops. \n\nMost SQL commands are self-explanatory due to historical reasons.\n\nAll code used here:\nhttps://github.com/Morr0/SQL-Tutorials/blob/main/Basics/sql.sql\n\nThanks for reading through this.','true',' It has been alive since the 1970s. It is used all throughout the software spectrum from banks to social media to small blogs. It is a standard that is adopted by relational database management systems (RDBMS).','true','true','0','2020','ramihhikmat','SQL: The absolute basics of the language','15/11/2020 1:04:58 PM','0','sql:-the-absolute-basics-of-the-language');,INSERT INTO \"Article\"(\"CreationDate\",\"Topic\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"CreatedYear\",\"Likes\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('11/10/2020 8:46:24 PM','Basics','Since early school-hood, everyone around wanted to finish/leave school to get a job, to be a millionaire, to start a business or whatever was floating in the mind back in the days. The same is true with learning to program, you want to run marathons before learning to walk the same distance a marathon will have.\n\nThus it is very important to learn to program objectively in a way that is purposeful. I believe most novice programmers fall into this trap as I did. I kept learning, learning and learning non-stop. I was hungry for knowledge. However, as time goes on you will realize that no one was taught how to build a car at the beginning of it's invention rather it was made. It was made not from learning how to make, rather than just doing it. This is the same with everything around. You see buildings that would be impossible to imagine 50 years ago but they are here. They are real. Thus, my idea is that you the reader as a novice programmer should notice that the world is made from nothing. It all started from a desire to build.\n\nSo, in my discussion here, I am trying to appeal to you a way that is worthwhile, a way to make you build. To build, you need to learn/self-teach how to build smaller things. You need to know how to lay a brick. So, you must study while building, you must delve deep into the code. You must dream about how to make your idea true, or perhaps clone an existing idea.\n\n## Here are the things that I will be discussing about in this article in case you want to leave:\n\n1- **Learn 20% of the time and practice with the rest.**\n\n2- **Please show your work to others, feel the sense of creation.**\n\n3- **Learn to read documentation, to stop wasting much time on tutorials.**\n\n4- **Iterate...**\n\n## Learn 20% of the time and practice with the rest\nWhy am I saying that. Well because it is true. Learning is one thing but practicing is another. To truly learn, you must\ngo through the harsh times novice programmers are presented with. Learning feels easy at times, you think the stuff is a piece of cake, but when you jump in, it is hell. It is hard to face your fear of practicing thinking you are not yet ready for it. The question is, when will you be ready?\n\nMy answer is, as soon as you learn a new concept, open up the text editor and code. Just make anything no matter what, as long it is out of curiosity. You will feel growth, it will be intimidating. It is. It is like learning to walk once your still a baby. It is foreign. You need to be comfortable doing it. Growth is good.\n\nHence, I suggest you follow watching/reading your tutorial and jump in to coding. You must prioritize coding. I spent\nyears looking for the best language to learn. The reality is, there isn't any. Or maybe. It depends on the job. However,\nyour job now is learning to do the job. Doing it is fine using an old hammer or a new, they are the same for a novice.\nPractice is actual learning, it is more likely to stick. You remember what you do using your hands not what you watch\nover the screen in between the ether of the air.\n\n\n## Please show your work to others, feel the sense of creation\nMy first real programming work was writing a virus to exploit someone. I was young thinking I can do the next big\nthing. However, nothing worked out. I ended up moving on to different things. Started making the next Facebook. I\nshowed my relatives what I did. Although it was copy and paste, I did not learn anything other than how to copy and\npaste faster. Therefore, I recommend to anyone to make a piece of work and show it to anyone.\n\nIKEA's products are the best at this, people are phenomenal with making new things from parts and showing them off\nto their beloved, neighbors, visitors and etc... As is programming. Why not make a stock market watcher or any\npotential thing. Why not? Let's say you made it. Show it to your network of people. Why not. It is not the best and will\nnever be. So just show it.\n\nWhen you show someone something you've made you feel the joy, the confidence, the magic of making rather than\nusing. The passion deep within made it. This increases your confidence to make better things. To constantly learn to do\nnewer things. Don't deprive your inside from the emotions of making something cool. Feel it. This will make you\nbetter. Will you make go ahead and not stop what you started. This will sparkle a series of future creations.\n\n\n## Learn to read documentation, to stop wasting much time on tutorials\n90% of the tutorials online are not useful to most people. Why you might ask? I have watched so many that they would account for approximately a year of my life. Tutorials most of the time are intended for beginners. A typical tutorial in a\nvideo or article form will take a good amount of time to assemble the basis of work. A lot of unnecessary things. Intro to sponsors and so on. On the other hand, reading documentation of what you want to accomplish is much easier done and is a better practice. Most of the time tutorials get dated quickly.\n\nReading documentation is like going to the manufacture of a product and asking, how do I use your product, what\nis the philosophy of your design and etc... It is very useful to to know how to use the thing you're learning from it's own\nsource (maybe a 3rd party source). It is even more useful to practice this all the time. My argument is that new libraries\nare so new that the chance of finding a tutorial on them is very slim right in their first month of release. And it will be\nworse if the technology you're learning is not so popular. Not to say that I only cover newer libraries, even old ones fall in this category. Maybe visiting a library's Github page will make you more knowledgeable. You can read existing issues available or the wiki. Maybe it is videos watched or ads in articles that you distract you.\n\nTherefore without much barbarian talk, my advice is to practice, get used to read documentation like reading code. So \ndon't obsess your mind from video to text. Why not just keep it text only. Reality is, that is how it will be. Even visual learners like me find it hard, however books were how were taught in school right? It is just the way the industry is.\n\nThat said, I don't mean to never watch or read a tutorial. I suggest to watch/read them. They offer a great overview of\nthings, but tend to work way better on general ideas rather than niche things.\n\n\n## Iterate...\nThis is a big thing. Do not ever think to stop doing those 3 steps above. Never be thinking that you know it all. You never will. Chances are you don't remember how everything works in a website you built a couple of weeks ago. Even if you\nwork on it daily. Keep learning to be better striving for a better future not recounting the past.\n\n\n## Conclusion\nMy way of thinking maybe skewed towards my own learning. You choosing to read this article, you probably thought that my article is worthwhile. So, you decided to chop a bit of time reading it. This is a way of learning. Not the only and not the best either. It is a methodology that got me out of the trap young professionals face, even though I am not a professional.\n\nThe best way to learn is always to practice. It was never in reading the books. It was applying the reads.\n\nTake care and thanks for reading.','true','Here is a description of how a beginner programmer must learn how to program.','true','true','2020','0','ramihhikmat','The process you must follow learning to program','11/10/2020 9:14:57 PM','1','the-process-you-must-follow-learning-to-program');,INSERT INTO \"Article\"(\"CreationDate\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"Likes\",\"CreatedYear\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('1/12/2020 1:00:00 PM','Let's start by saying that design patterns are not how to implement things for the better. They are a concept of how to structure for the better. What is meant by \"better\"? Better may mean ease of understanding of code, standard others know to use, an efficient conceptual grouping of things or something else a project demands.\n\nThe template design pattern is rather simple, it is the idea that the user of a class uses a method that is not to be called directly. This seems confusing, why would I involve my mind through this confusion? Think of two classes, one is abstract and the other implements from it (concrete class). The concrete class overrides a method a `DoSomething()` method and is supposed to call the abstract's implementation of it before implementing it's own. Ok now that is good what might be the problem. One problem is the fact you must call the base class implementation of the method which may cause bugs if not called. Another problem maybe the caller should not call this method directly, in other words, maybe the caller has to call another method first then this one. A third problem maybe what if the implemented method is doing everything for the class? A fourth problem may be you need to pass encapsulated data the public doesn't have access to. The author of the abstract class may have designed the method to only be concerned about one thing but the implementor went ahead and spiced up the method with calls to database, business services and more. This became a mess. \n\nIt may not be clear yet. Just before demonstrating with code, this pattern is a [behavioral](https://en.wikipedia.org/wiki/Behavioral_pattern) design pattern that is concerned with how classes behave with each other (communication).\n\nWill demonstrate a demo in [C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language)) however the concept is object oriented language agnostic. Any capable OOP language will support such design.\n\n### Creating the project:\nWill use the [dotnet CLI](https://docs.microsoft.com/en-us/dotnet/core/tools/) to make a new project called `TemplateMethod`.\n\n```bash\ndotnet new console --name TemplateMethod\n```\n\nNow that I've created the project, if your one directory outside you can run the command below to ensure dotnet made the program correctly along with a default \"Hello World\" console call.\n\n```bash\ndotnet run --project TemplateMethod\n```\n\nIf you are inside the same directory as the project, you can just run:\n```bash\ndotnet run\n```\n\n### A scenario where one needs the template pattern:\nSo below there are two classes, one abstract and other implements from it. The only method there is is `DoSomething()`. Notice that it is `virtual`. This makes it overridable by child classes. I have put an implementation in the abstract class. You may not want to implement a default implementation and just make it an `abstract` method which will force all concrete classes to provide an implementation.\n\n```c#\ninternal abstract class AbstractClass\n{\n    public virtual void DoSomething(){\n        Console.WriteLine(\"Hello World\");\n    }\n}\n```\n\n```c#\ninternal class ConcreteClass : AbstractClass\n{\n    public override void DoSomething(){\n        base.DoSomething();\n        Console.WriteLine(\"Hello\");\n    }\n}\n```\n\nHere I implement the abstract class. I call `base.DoSomething()`. Ok where is the fault? Nothing. Let's say that the base class method call was not there. Now you have a bug assuming you had to call it. Let's say you had more classes implementing the same abstract class and all have that bug, how are you supposed to know about it? Syntax is fine! Let's say the classes are huge. Then you have a problem. This is as an anti-pattern or more specifcally anti-template pattern.\n\n### Solving the problem above:\nThe fix is simple, just make a new method in the abstract class that I will call `ProcessDoSomething`. It shouldn't be overridable and is to be consumer facing. Now make the `DoSomething` method `protected` to prevent it from being called directly. Making the method abstract is even better but if you are advocate of default implementations then provide one. This is done below:\n\n```c#\ninternal abstract class AbstractClass\n{\n    protected virtual void DoSomething(){\n        Console.WriteLine(\"Hello World\");\n    }\n\n    public void ProcessDoSomething(){\n        DoSomething();\n        // Do other things\n    }\n}\n```\n\n```c#\ninternal class ConcreteClass : AbstractClass\n{\n    protected override void DoSomething(){\n        Console.WriteLine(\"Hello World\");\n        Console.WriteLine(\"Hello\");\n    }\n}\n```\n\nNotice that we fixed the problem we had above but we have another? We still can call `base.DoSomething()` if was not abstract method. I will argue that this is not a concern because by default people don't call `base` unless they were told to. To ensure against this possibility, making the method `abstract` will fix this issue.\n\n### What we benefited from this little overhead:\n- The consumer cannot call the implementation directly, you have to call the public equivalent.\n- The consumer facing `ProcessDoSomething` can call **many template methods in the order intended**.\n- Leave the concern of the implementation to the implementor and leave nothing to worry about for the consumer.\n- Pass encapsulated data to the template methods without the consumer worrying about it.\n\nThe scenario above can be found here:\nhttps://github.com/Morr0/TemplatePattern\n\n### Real life scenario where the template pattern is used:\nImagine you are a cook, you want to make a bread. A bread is made in different cycles first mix up the reciple then make the dough then cook it. Ok that can be done with 3 template methods below:\n```c#\nprotected abstract void MixUpRecipe();\nprotected abstract void MakeDough();\nprotected abstract void Cook();\n```\n\nYou then can have a single consumer facing caller:\n```c#\npublic void MakeBread(){\n    MixUpRecipe();\n    MakeDough();\n    Cook();\n}\n```\n\nYou make the cook class abstract then people can implement it with different breads.\n\nNotice here the template pattern was not the only pattern used. The [strategy](https://en.wikipedia.org/wiki/Strategy_pattern) pattern was used because you can have a mexican bread strategy, french bread strategy or a whole lot more. You might say that is not really a strategy pattern with template pattern. In fact it is, you got a template which can be for any strategy you like. In the end the product is bread. The way to make the bread is the strategy.\n\n## Conclusion:\nDesign patterns are not recipes but more of guidelines. You should not always use design patterns whenever you can, you may want your own design. The [null](https://en.wikipedia.org/wiki/Null_object_pattern) object pattern maybe useful if you want to implement default implementations and ignore some template methods.\n\nThanks for reading through.','true','Design patterns are not how to implement things for the better. They are a concept of how to structure for the better. This article will cover the template design pattern and implement it using C# along with a real life scenario at the end.','true','true','0','2020','ramihhikmat','The template design pattern','1/12/2020 1:00:00 PM','0','the-template-design-pattern');,INSERT INTO \"Article\"(\"CreationDate\",\"Topic\",\"Content\",\"Contactable\",\"Description\",\"Likeable\",\"Shareable\",\"CreatedYear\",\"Likes\",\"AuthorId\",\"Title\",\"LastUpdatedDate\",\"Shares\",\"TitleShrinked\") VALUES ('11/10/2020 8:39:34 PM','Basics','Everyone starts somewhere, some start guided while others unguided. Guided people get to learn along a specified path while the latter get to experiment, wonder, appreciate and finally learn. The difference is that the unguided will experience more pain through the journey but learn more and eventually end up doing the same tasks as the guided learners. So the takeaway is that guided learning is a must for beginners as it won't stress someone while learning and would rather want to learn rather than get so stressed and abolish his/her plan of learning and move on to something else.\n\nTo ease your life, I have compiled a basic list of things I want beginners to know before learning to program. The reason for that is to ease the on-boarding towards a new skill. You reading this makes me assume you want to learn to program and willing to go through the journey.\n\n## If you want a list of the points, here it is:\n\n- **Learn to be strategic**\n\n- **Learn to think big but exercise small**\n\n- **Learn to love learning from others**\n\nIf you have not yet closed the tab, let's start...\n\n## Learn to be strategic\nProgramming is a big field, larger than you can imagine, most programmers work as software engineers. However, there is a good population of them who are physicists, financial experts, researchers, engineers of different disciplines and more. All of those do one basic thing which is problem solving by programming. They all at some point in their careers have gone through harsh times and may have decided to give up. Luckily they continued on as you will too👍.\n\nAll of those programmers compromise billions of man hours that went into their software that ended up in vehicles, smartphones, video games and much more. All of them thought at one point they can do it all, but reality hit and people realized that everyone has a role. i.e. some engineer may want to work on the physics of a game while the other wants to handle the networking of shooting guns in real-time in that same game.\n\nTherefore, my message is to be aware of the big technology stack and be able to think where do you want to be at any given time. e.g. I want to start an app in a new industry by the next year or for example I want to build my blog and blog by the end of summer. Those are strategies you are to outline through your journey. As fun as it maybe to jump in to code, sometimes you wonder what exactly do you really want to do. Hence, learn to strategize your journey, plan ahead when you want to learn a particular language and when to contribute to an open source software.\n\n\n## Learn to think big but exercise small\nI have been there, I thought in five months I will have the next GTA game that is way better, alone all by myself. But a week passed and I still haven't gone nowhere. That is due to my big ambition, although making the next GTA is nice but do I really have the willpower and ability to make the graphics, sounds, terrain and write all the code. No way it is possible to invent something that hundreds of engineers have worked on in a small time-frame.\n\nInstead, what is possible is to think big (I mean as big as you can but also realistic within your lifetime) but work on small steps each time. It is a compounding effect, putting $1K in the bank each month on a saving account won't make you rich when you'r young but will definitely make you a millionaire by the time you are retired even though you didn't put a total of million. The same is with programming, expect to have big dreams at night but when you wake up, expect to work piece by piece as this is will get you to you closer to your big ambition overtime rather than ever (In case you keep starting large projects and abandoning them).\n\nThe message here is to walk a step at a time towards the goal as opposed to jumping five steps each time and getting exhausted a couple of jumps ahead and steering your direction into a new dream. You really need to think big but you must not bite more than you can chew or it will be embarrassing towards yourself not to say your beloved ones.\n\n\n## Learn to keep learning\nResearchers never stop learning and publishing and learning and publishing and so on. So why don't you do the same. Learning is a must for every human being as the brain is a muscle that is hungry to learn. Learning is an act that is very rewarding in the sense that you can apply what you learned, especially in programming.\n\nLet's take an example, imagine I just learned how web scraping works (In case you don't know what it means, it is automating a program to search websites for a specific thing such as looking for a stock price every minute), now you know the theory, you ought to apply it or practically nothing was gained in the process. Technology keeps advancing and new things come up everyday, whenever a new social media platform comes out people jump on it, learn it and then stop learning until the next comes up again. However, keeping to learn, is inquiring about the new, learning from others, how did others do it, how could you do it, sketching, listening to podcasts, watching videos/courses, reading books, reading code documentation, struggling to get an app to work on a specific screen resolution correctly and so on...\n\nThe message here is to never be full of it, stay hungry.\n\n\n## Conclusion\nI hope this has gotten to your mind in a nice way. It was a good time writing those ideas. While writing them, I learned to think bigger (Perhaps will continue the list for the interested or even write a book on them as strategy of income). The thing I want to drive home is to be prepared to expect to learn everyday (no one knows it all) and be prepared to strategize the things you want to work on overtime through relating to your big goal/s.\n\nTake care and thanks for reading.','true','My take on what first steps must a new programmer step through before learning to program. It is an advice given to many people in multiple discipline but most useful to programmers due to everyday evolvement of technology.','true','true','2020','0','ramihhikmat','What are the first steps you should consider stepping before learning programming','11/10/2020 9:17:17 PM','0','what-are-the-first-steps-you-should-consider-stepping-before-learning-programming');"
"INSERT INTO \"User\"(\"DateLastLoggedIn\",\"Roles\",\"DateCreated\",\"FirstName\",\"Id\",\"LastName\",\"Email\",\"PasswordHash\") VALUES ('01/18/2021 07:13:17','basic,editor','17/01/2021 11:46:07 AM','Rami','ramihhikmat','Hikmat','ramihhikmat@gmail.com','$2a$11$LLprEXdxR/yXJgv8ITuNBu86rd/XAAy4b9beGRMyjxi3XXFKfiFDS');,INSERT INTO \"User\"(\"Roles\",\"FirstName\",\"DateCreated\",\"Id\",\"Email\",\"PasswordHash\") VALUES ('basic,editor,admin','Admin','17/01/2021 11:56:59 AM','ramihhadad','ramihhadad@hotmail.com','$2a$11$taajAWLaCVyX8OJaUEVs3e8xKioLeuKMt4O3zf7JfTPVjxSgjHa.G');"